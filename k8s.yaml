apiVersion: v1
kind: Service
metadata:
  name: client-worker-service
spec:
  type: LoadBalancer
  ports:
    - port: 8000
      targetPort: 8000
  selector:
    app: client-worker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-worker
spec:
  replicas: 7
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 2
      maxSurge: 2
  selector:
    matchLabels:
      app: client-worker
  template:
    metadata:
      labels:
        app: client-worker
    spec:
      nodeSelector:
        dedicated: deamond
      containers:
        - name: client-worker
          image: CONTAINER_IMAGE
          env:
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: redis-host
            - name: REDIS_PASS
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: redis-password
            - name: KAFKA_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: kafka-host
            - name: LOGSTASH_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: logstash-host
          securityContext:
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          ports:
            - containerPort: 8000
          livenessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 20
          resources:
            requests:
              memory: "64M"
              cpu: "250m"
            limits:
              memory: "256M"
              cpu: "0.5"